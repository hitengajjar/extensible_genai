@startuml

title
<u>Use Case:</u> Sequence diagram for Administration of Chat modules
License: TODO
End title


autonumber
skinparam ParticipantPadding 20
skinparam BoxPadding 10

skinparam sequenceArrowThickness 2

participant Client as C

box "PlatformServices" #LightBlue 
participant IdP
participant GenAIService as GenAI
database DB
end box

C -> GenAI: **POST** /chat_modules \n\
|_ id: ... \n\
|_ name: ... \n\
|_ initial_context_schema: ... \n\
|_ usecase_handlers: {...} \n\
|_ view_handlers: {...} \n\
|_ agent_prompt: ...

note right of GenAI
Consider below usecase_handler Function example

  id: 7b0dfe56-389a-4a3d-9ec4-86cda4ad8595
  name: "SecurityBot"
  initial_context_schema: ...
  usecase_handlers:
    - id: 123e4567-e89b-12d3-a456-426614174001
      description: Provides the latest threat updates.
      name: ThreatUpdates
      source: ...
      context: |
        {
          "type": "object",
          "properties": {
            "session_id": {
                "type": "string"
            },
            "incident_id": {
                "type": "string"
            },
            "workload_id": {
                "type": "string"
            }
          },
          "required":["session_id","incident_id","workload_id"]
        }

      interface_schema:
        input: nil
        return: |
          {
            "type": "object",
            "properties": {
              "updates": {
                "type": "array",
                "items": { "type": "string" }
              }
            },
            "required": [ "updates" ]
          }
    view_handlers:
      - ...
    agent_prompt: |
      You are cybersecurity expert specialized in addressing the Endpoint Detection and Response questions.
      ...
    

end note

GenAI -> IdP: validate client
return **200 OK**

GenAI -> DB: SELECT EXISTS (SELECT 1 FROM \nCHAT_MODULES WHERE id = ..);
return result
Alt new module
  GenAI -> DB: Register ChatModule
  GenAI --> C: **201 Created** {id: ...}
Else existing module
  GenAI -> C: **409 Conflict**
End

@enduml